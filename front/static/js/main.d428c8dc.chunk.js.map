{"version":3,"sources":["redux/navigation/navigationSlice.js","components/navigation/Navigation.js","consts.js","redux/check/historySlice.js","redux/check/checkSlice.js","components/check/ResultTable.js","components/history/cards/SuccessCardForHistory.js","components/check/cards/RunCard.js","components/history/History.js","components/check/cards/SuccessCard.js","components/check/FileCheck.js","components/check/AutocompleteCategories.js","components/check/ExpressCheck.js","components/check/Check.js","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["navigationSlice","createSlice","name","initialState","page","reducers","setPage","state","action","payload","actions","selectPage","navigation","StyledTab","styled","props","Tab","disableRipple","theme","textTransform","fontWeight","typography","fontWeightRegular","fontSize","pxToRem","marginRight","spacing","color","backgroundColor","StyledTabs","Tabs","TabIndicatorProps","children","className","display","justifyContent","maxWidth","width","Navigation","dispatch","useDispatch","useSelector","value","onChange","event","label","API_URL","tasks","tasksCount","tasksSubTasks","getTasksThunk","createAsyncThunk","a","skip","take","setCounter","counter","fetch","result","json","getTasksSubTasksThunk","isValid","id","isValidStr","undefined","historySlice","extraReducers","builder","addCase","fulfilled","count","subTasks","selectTasks","history","selectTasksSubTasks","selectTasksCount","categoriesList","selectedCategories","responseCategories","currentSubTasks","currentTask","error","selectedTaskId","isUploading","isGettingTask","isGettingSubTasks","isModalResult","getCategoriesThunk","input","response","expressCheckThunk","body","method","headers","sendFileThunk","fileName","getLastTaskThunk","getSubTasksThunk","console","log","getLastTaskThunkForUpload","checkSlice","setSelectedCategories","includes","JSON","stringify","push","removeFromSelectedCategories","filter","e","clearCategories","setError","clearExpressCheckStates","precheckCleaning","setIsModalResult","setCurrentTask","categories","—Åategories","task","pending","selectCategoriesList","check","selectSelectedCategories","selectError","selectResponseCategories","selectCurrentSubTasks","selectCurrentTask","selectIsUploading","selectIsGettingTask","ResultTable","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","row","bgcolor","sx","border","scope","productName","userCategories","cat","defaultCategories","SuccesCardForHistory","useState","viewMode","setViewMode","currentSkip","setCurrentSkip","currentTake","setFilter","isValidCount","inValidCount","notDetected","condSkip","setCondSkip","useEffect","flag","Card","minWidth","borderColor","margin","CardContent","Typography","gutterBottom","variant","time","mb","CardActions","style","Button","size","onClick","Select","labelId","target","MenuItem","length","RunCard","History","setSkip","setTimeout","marginLeft","status","SuccesCard","FileCheck","file","setFile","fileCheckStyle","multiple","type","files","Box","marginBottom","document","querySelector","click","CircularProgress","formData","FormData","append","padding","paddingBottom","Root","palette","mode","InputWrapper","StyledTag","el","onDelete","other","Listbox","AutocompleteCategories","option","index","parse","spellcheck","placeholder","ExpressCheck","borderStyle","setBorderStyle","expressCheckStyle","m","noValidate","autoComplete","TextField","fullWidth","code","codes","Check","App","store","configureStore","reducer","navigationReducer","checkReducer","historyReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+PAIaA,EAAkBC,YAAY,CACvCC,KAAM,aACNC,aALiB,CACjBC,KAAO,SAKPC,SAAS,CACLC,QAAS,SAACC,EAAOC,GACbD,EAAMH,KAAOI,EAAOC,YAOjBH,EAAYN,EAAgBU,QAA5BJ,QAEFK,EAAa,SAACJ,GAAD,OAAWA,EAAMK,WAAWR,MAEvCJ,IAAf,Q,OCdMa,EAAYC,aAAO,SAACC,GAAD,OAAW,cAACC,EAAA,EAAD,aAAKC,eAAa,GAAKF,MAAzCD,EACd,gBAAGI,EAAH,EAAGA,MAAH,MAAgB,CACdC,cAAe,OACfC,WAAYF,EAAMG,WAAWC,kBAC7BC,SAAUL,EAAMG,WAAWG,QAAQ,IACnCC,YAAaP,EAAMQ,QAAQ,GAC3BC,MAAO,qBACP,iBAAkB,CAChBA,MAAO,WAET,qBAAsB,CACpBC,gBAAiB,iCAKjBC,EAAaf,aAAO,SAACC,GAAD,OACxB,cAACe,EAAA,EAAD,2BACMf,GADN,IAEEgB,kBAAmB,CAAEC,SAAU,sBAAMC,UAAU,gCAHhCnB,CAKhB,CACD,uBAAwB,CACtBoB,QAAS,OACTC,eAAgB,SAChBP,gBAAiB,eAEnB,2BAA4B,CAC1BQ,SAAU,GACVC,MAAO,OACPT,gBAAiB,UAIR,SAASU,IAClB,IAAMC,EAAWC,cACXpC,EAAOqC,YAAY9B,GAIzB,OACE,eAACkB,EAAD,CACAa,MAAOtC,EACPuC,SANF,SAAoBC,EAAMxC,GACtBmC,EAASjC,EAAQF,KAMnB,aAAW,sBAHX,UAII,cAACS,EAAD,CAAW6B,MAAM,QAAQG,MAAM,2DAC/B,cAAChC,EAAD,CAAW6B,MAAM,UAAUG,MAAM,kD,qCCnDhCC,EAAU,GCEjB3C,EAAe,CACjB4C,MAAQ,GACRC,WAAa,EACbC,cAAe,IAGNC,EAAgBC,YACzB,wBADyC,uCAEzC,qCAAAC,EAAA,6DAAOC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,QAA9B,SACyBC,MAAM,GAAD,OAAIX,EAAJ,2BAA8BO,EAA9B,iBAA2CC,IADzE,cACUI,EADV,OAEIH,IAAaC,GAFjB,SAGiBE,EAAOC,OAHxB,mFAFyC,uDAQhCC,EAAwBT,YACjC,gCADiD,uCAEjD,yCAAAC,EAAA,6DAAOC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,KAAMO,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,GACnBC,EAAaF,EAAU,gBAAkB,sBAChCG,IAAVH,IAAqBE,EAAa,IAFzC,SAGyBN,MAAM,GAAD,OAAIX,EAAJ,sBAAyBgB,EAAzB,iBAAoCT,EAApC,iBAAiDC,GAAjD,OAAwDS,IAHtF,cAGUL,EAHV,gBAIqBA,EAAOC,OAJ5B,cAIQA,EAJR,QAKSG,GAAKA,EALd,kBAMWH,GANX,4CAFiD,uDAWvCM,EAAehE,YAAY,yBACrCC,KAAM,UACNC,gBACGA,GAHiC,IAIpCE,SAAS,GACT6D,cAAc,SAACC,GACXA,EAAQC,QAAQlB,EAAcmB,WAAU,SAAC9D,EAAOC,GAC5CD,EAAMwC,MAAQvC,EAAOC,QAAQsC,MAC7BxC,EAAMyC,WAAaxC,EAAOC,QAAQ6D,SAEtCH,EAAQC,QAAQR,EAAsBS,WAAW,SAAC9D,EAAOC,GACrDD,EAAM0C,cAAczC,EAAOC,QAAQqD,IAAMtD,EAAOC,QAAQ8D,gBAMvDC,EAAc,SAACjE,GAAD,OAAWA,EAAMkE,QAAQ1B,OACvC2B,EAAsB,SAACnE,GAAD,OAAWA,EAAMkE,QAAQxB,eAC/C0B,EAAmB,SAACpE,GAAD,OAAWA,EAAMkE,QAAQzB,YAE1CiB,IAAf,Q,8HC/CM9D,EAAe,CACjByE,eAAe,GACfC,mBAAoB,GACpBC,mBAAoB,GACpBC,gBAAiB,GACjBC,YAAa,GACbC,MAAM,KACNC,eAAgB,KAChBC,aAAY,EACZC,eAAe,EACfC,mBAAmB,EACnBC,eAAc,GAELC,EAAqBpC,YAC9B,2BAD8C,uCAE9C,WAAMqC,GAAN,eAAApC,EAAA,sEACyBK,MAAMX,6BAAqC0C,GADpE,cACQC,EADR,gBAEiBA,EAAS9B,OAF1B,mFAF8C,uDAQrC+B,EAAoBvC,YAC7B,0BAD6C,uCAE7C,WAAMwC,GAAN,eAAAvC,EAAA,sEACyBK,MAAMX,eAAuB,CAC9C8C,OAAQ,OACRC,QAAQ,CACJ,eAAgB,oBAEpBF,SANR,cACQF,EADR,gBAQiBA,EAAS9B,OAR1B,mFAF6C,uDAcpCmC,EAAgB3C,YACzB,sBADyC,uCAEzC,+BAAAC,EAAA,6DAAQuC,EAAR,EAAQA,KAAR,EAAcI,SAAd,SACyBtC,MAAMX,aAAqB,CAC5C8C,OAAO,OACPD,SAHR,cACQF,EADR,gBAKiBA,EAAS9B,OAL1B,mFAFyC,uDAWhCqC,EAAmB7C,YAC5B,yBAD4C,sBAE5C,4BAAAC,EAAA,sEACyBK,MAAMX,gBAD/B,cACQ2C,EADR,gBAEiBA,EAAS9B,OAF1B,oFAMSsC,EAAmB9C,YAC5B,yBAD4C,uCAE5C,uCAAAC,EAAA,6DAAOC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAMQ,EAAnB,EAAmBA,GAAID,EAAvB,EAAuBA,QACfE,EAAaF,EAAU,gBAAkB,sBAChCG,IAAVH,IAAqBE,EAAa,IACrCmC,QAAQC,IAAItC,GAHhB,SAIyBJ,MAAMX,EAAQ,cAAD,OAAegB,EAAf,iBAA0BT,EAA1B,iBAAuCC,GAAvC,OAA8CS,IAJpF,cAIQ0B,EAJR,gBAKiBA,EAAS9B,OAL1B,oFAF4C,uDAWnCyC,GAA4BjD,YACrC,kCADqD,uCAErD,iCAAAC,EAAA,6DAAOG,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,QAAnB,SACyBC,MAAMX,gBAD/B,cACQ2C,EADR,OAEIlC,IAAaC,GAFjB,SAGiBiC,EAAS9B,OAH1B,mFAFqD,uDAS5C0C,GAAapG,YAAY,yBAClCC,KAAM,QACNC,gBACGA,GAH8B,IAIjCE,SAAS,CACLiG,sBAAuB,SAAC/F,EAAOC,GACvBD,EAAMsE,mBAAmB0B,SAASC,KAAKC,UAAUjG,EAAOC,WAAWF,EAAMsE,mBAAmB6B,KAAKF,KAAKC,UAAUjG,EAAOC,WAE/HkG,6BAA8B,SAACpG,EAAOC,GAClCD,EAAMsE,mBAAqBtE,EAAMsE,mBAAmB+B,QAAO,SAACC,GAAD,OAAOA,IAAMrG,EAAOC,YAEnFqG,gBAAiB,SAACvG,GACdA,EAAMqE,eAAiB,IAE3BmC,SAAU,SAACxG,EAAOC,GACdD,EAAM0E,MAAQzE,EAAOC,SAEzBuG,wBAAyB,SAACzG,GACtBA,EAAMqE,eAAiB,GACvBrE,EAAMsE,mBAAqB,GAC3BtE,EAAM0E,MAAQ,MAElBgC,iBAAiB,SAAC1G,GACdA,EAAMuE,mBAAqB,GAC3BvE,EAAM0E,MAAQ,MAElBiC,iBAAkB,SAAC3G,EAAOC,GACtBD,EAAM+E,cAAgB9E,EAAOC,SAEjC0G,eAAgB,SAAC5G,EAAOC,GACpBD,EAAMyE,YAAcxE,EAAOC,UAGnCyD,cAAe,SAACC,GACZA,EAAQC,QAAQmB,EAAmBlB,WAAW,SAAC9D,EAAOC,GAElDD,EAAMqE,eAAiBpE,EAAOC,QAAQ2G,cAE1CjD,EAAQC,QAAQsB,EAAkBrB,WAAU,SAAC9D,EAAOC,GACpB,OAAzBA,EAAOC,QAAQoD,QAAgBtD,EAAM0E,MAAQ,KAC3C1E,EAAM0E,OAASzE,EAAOC,QAAQoD,QACnCtD,EAAMuE,mBAAqBtE,EAAOC,QAAQ4G,gBAC1CnB,QAAQC,IAAI3F,EAAOC,QAAQ4G,oBAE/BlD,EAAQC,QAAQ4B,EAAiB3B,WAAW,SAAC9D,EAAOC,GAChDD,EAAMyE,YAAcxE,EAAOC,QAAQ6G,KACnC/G,EAAM6E,eAAgB,KAE1BjB,EAAQC,QAAQ6B,EAAiB5B,WAAW,SAAC9D,EAAOC,GAChDD,EAAMwE,gBAAkBvE,EAAOC,QAAQ8D,SACvChE,EAAM8E,mBAAoB,KAE9BlB,EAAQC,QAAQ6B,EAAiBsB,SAAS,SAAChH,EAAOC,GAC9CD,EAAM8E,mBAAoB,KAE9BlB,EAAQC,QAAQgC,GAA0B/B,WAAW,SAAC9D,EAAOC,GACzDD,EAAMyE,YAAcxE,EAAOC,QAAQ6G,KACnC/G,EAAM6E,eAAgB,KAE1BjB,EAAQC,QAAQ4B,EAAiBuB,SAAS,SAAChH,EAAOC,GAC9CD,EAAM6E,eAAgB,KAE1BjB,EAAQC,QAAQ0B,EAAczB,WAAW,SAAC9D,EAAMC,GAC5C0F,QAAQC,IAAI3F,EAAOC,QAAQ6G,MAC3B/G,EAAMyE,YAAcxE,EAAOC,QAAQ6G,KACnC/G,EAAM4E,aAAc,KAExBhB,EAAQC,QAAQ0B,EAAcyB,SAAS,SAAChH,EAAMC,GAC1CD,EAAM4E,aAAc,SAMzB,GAC+DkB,GAAW3F,QADnE4F,GAAP,GAAOA,sBAAuBK,GAA9B,GAA8BA,6BAA8BG,GAA5D,GAA4DA,gBAAiBE,GAA7E,GAA6EA,wBACpEC,GADT,GACSA,iBAEHO,IAHN,GAC2BN,iBAD3B,GAC6CC,eAEhB,SAAC5G,GAAD,OAAWA,EAAMkH,MAAM7C,iBAC9C8C,GAA2B,SAACnH,GAAD,OAAWA,EAAMkH,MAAM5C,oBAClD8C,GAAc,SAACpH,GAAD,OAAWA,EAAMkH,MAAMxC,OACrC2C,GAA2B,SAACrH,GAAD,OAAWA,EAAMkH,MAAM3C,oBAClD+C,GAAwB,SAACtH,GAAD,OAAWA,EAAMkH,MAAM1C,iBAC/C+C,GAAoB,SAACvH,GAAD,OAAWA,EAAMkH,MAAMzC,aAE3C+C,GAAoB,SAACxH,GAAD,OAAUA,EAAMkH,MAAMtC,aAC1C6C,GAAsB,SAACzH,GAAD,OAASA,EAAMkH,MAAMrC,eAIzCiB,MAAf,QC3Je,SAAS4B,GAAT,GAAwC,IAAlBlD,EAAiB,EAAjBA,gBACjC,OACA,cAACmD,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAO,aAAW,eAAlB,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWnG,MAAM,MAAjB,sFACA,cAACmG,EAAA,EAAD,CAAWnG,MAAM,MAAjB,2HACA,cAACmG,EAAA,EAAD,CAAWnG,MAAM,MAAjB,yEAGJ,cAACoG,EAAA,EAAD,UACG1D,EAAgB2D,KAAI,SAACC,GAClB,IAAIC,EAAWD,EAAI9E,QAA+B,qBAArB,mBAE/B,OADmB,OAAd8E,EAAI9E,UAAgB+E,EAAU,sBAC5B,eAACL,EAAA,EAAD,CAELM,GAAI,CAAE,mCAAoC,CAAEC,OAAQ,GAAKlH,gBAAgBgH,GAFpE,UAIL,cAACJ,EAAA,EAAD,CAAWL,UAAU,KAAKY,MAAM,MAAhC,SACGJ,EAAIK,cAEP,cAACR,EAAA,EAAD,UAAYG,EAAIM,eAAeP,KAAI,SAAAQ,GAC/B,OAAOA,EAAIhJ,KAAK,UAEpB,cAACsI,EAAA,EAAD,UAAYG,EAAIQ,kBAAkBT,KAAI,SAAAQ,GAClC,OAAOA,EAAIhJ,KAAK,YAVfyI,EAAI7E,cCdR,SAASsF,GAAT,GAAsC,IAAP9B,EAAM,EAANA,KACpC/E,EAAWC,cACjB,EAAgC6G,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAsBJ,mBAAS,IAAxBK,EAAP,oBACM3E,EAAkBtC,YAAYiC,GACpC,EAA8B2E,mBAAS,GAAvC,mBAAQzC,EAAR,KAAgB+C,EAAhB,KACA,EAAgCN,mBAAS/B,EAAKsC,aAAetC,EAAKuC,aAAevC,EAAKwC,aAAtF,mBAAOC,EAAP,KAAiBC,EAAjB,KAqCA,OApCAC,qBAAU,WACN/D,QAAQC,IAAIpB,KACd,CAACA,IACHkF,qBAAU,WACR,IAAIC,EACO,GAARtD,IACDoD,EAAY1C,EAAKsC,aAAetC,EAAKuC,aAAevC,EAAKwC,aACzDI,OAAKlG,GAEI,GAAR4C,IACDoD,EAAY1C,EAAKuC,cAChBK,GAAK,GAEG,GAARtD,IACDoD,EAAY1C,EAAKsC,cACjBM,GAAK,GACP3H,EAASqB,EAAsB,CAACP,KAAKmG,EAAalG,KAAKoG,EAAa5F,GAAGwD,EAAKxD,GAAID,QAAQqG,OACvF,CAACV,IAEJS,qBAAU,WAER,IAAIC,EADJT,EAAe,GAEJ,GAAR7C,IACDoD,EAAY1C,EAAKsC,aAAetC,EAAKuC,aAAevC,EAAKwC,aACzDI,OAAKlG,GAEI,GAAR4C,IACDoD,EAAY1C,EAAKuC,cAChBK,GAAK,GAEG,GAARtD,IACDoD,EAAY1C,EAAKsC,cACjBM,GAAK,GACLhE,QAAQC,IAAI+D,GACd3H,EAASqB,EAAsB,CAACE,GAAGwD,EAAKxD,GAAIT,KAAK,EAAGC,KAAKoG,EAAa7F,QAAQqG,OAC/E,CAACtD,IAEE,eAACuD,EAAA,EAAD,CAAMtB,GAAI,CAAEuB,SAAU,IAAKC,YAAY,qBAAuBC,OAAO,MAArE,UACF,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAY3B,GAAI,CAAEtH,SAAU,IAAMI,MAAM,iBAAiB8I,cAAY,EAArE,gHAGA,eAACD,EAAA,EAAD,CAAYE,QAAQ,KAAKvC,UAAU,MAAnC,iFACgBb,EAAKqD,QAErB,eAACH,EAAA,EAAD,CAAY3B,GAAI,CAAE+B,GAAI,KAAOjJ,MAAM,iBAAnC,yDACY2F,EAAKsC,aADjB,0CACwCtC,EAAKuC,aAD7C,oHACmFvC,EAAKwC,eAExF,eAACU,EAAA,EAAD,CAAYE,QAAQ,KAAK/I,MAAM,iBAA/B,mEAEE,6BAGJ,eAACkJ,EAAA,EAAD,CAAaC,MAAO,CAAC5I,QAAQ,SAA7B,WACIoH,GAAY,cAACyB,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WACxC1I,EAASqB,EAAsB,CAACE,GAAGwD,EAAKxD,GAAIT,KAAKmG,EAAalG,KAAKoG,EAAa7F,aAAQG,KACxFuF,GAAY,IAFF,2HAIbD,GAAY,cAACyB,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WACvC1B,GAAY,IADH,+GAGJD,GAAY,sBAAKwB,MAAO,CAACR,OAAO,MAApB,UACjB,8FACA,eAACY,EAAA,EAAD,CAAQC,QAAQ,QAAQrH,GAAG,SAASpB,MAAOkE,EAAQjE,SAAU,SAACkE,GAC1D8C,EAAU9C,EAAEuE,OAAO1I,QADvB,UAGA,cAAC2I,EAAA,EAAD,CAAU3I,MAAM,IAAhB,gCACA,cAAC2I,EAAA,EAAD,CAAU3I,MAAM,IAAhB,yGACA,cAAC2I,EAAA,EAAD,CAAU3I,MAAM,IAAhB,6FAIH4G,GAAY,cAACrB,GAAD,CAAalD,gBAAkBA,EAAgBuC,EAAKxD,IAAMiB,EAAgBuC,EAAKxD,IAAO,KAClGwF,GAAY,eAACuB,EAAA,EAAD,aACNrB,GAAe,cAACuB,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WACpCxB,EAAeD,EAAY,KADrB,SAGL,MAEZA,EAAYE,EAAY,IACtB3E,EAAgBuC,EAAKxD,KAAOiG,EAAWP,EAAYzE,EAAgBuC,EAAKxD,IAAIwH,QAAY,8BACvF,cAACP,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WAC1BxB,EAAeD,EAAY,KAD/B,SAGK,WAKZF,GAAY,cAACyB,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WACvC1B,GAAY,IADH,qHCzGN,SAASgC,GAAT,GAAiC,IAAfjE,EAAc,EAAdA,KAAMgD,EAAQ,EAARA,OACnC,OACI,cAACH,EAAA,EAAD,CAAMtB,GAAI,CAAEuB,SAAU,IAAKC,YAAY,mBAAoBC,OAAOA,EAAS,KAAO,KAAlF,SACF,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAY3B,GAAI,CAAEtH,SAAU,IAAMI,MAAM,iBAAiB8I,cAAY,EAArE,2HAGA,eAACD,EAAA,EAAD,CAAYE,QAAQ,KAAKvC,UAAU,MAAnC,iFACgBb,EAAKqD,QAGrB,eAACH,EAAA,EAAD,CAAYE,QAAQ,KAAK/I,MAAM,eAA/B,0EAEE,+BCVK,SAAS6J,KACpB,IAAMzI,EAAQN,YAAY+B,GAC1B,EAAwB6E,mBAAS,GAAjC,mBAAOhG,EAAP,KAAaoI,EAAb,KACA,EAA8BpC,oBAAU,KAAxC,mBAAO7F,EAAP,KAAgBD,EAAhB,KACMP,EAAaP,YAAYkC,GAEzBpC,EAAWC,cAMjB,OALAyH,qBAAU,WACNyB,YAAW,WACPnJ,EAASW,EAAc,CAACG,OAAKC,KAJxB,GAI8BC,WAAWA,EAAYC,eAC5D,OACH,CAACA,EAASH,IAET,gCACI,oBAAKyH,MAAO,CAACa,WAAW,MAAxB,+GACC5I,EAAM2F,KAAI,SAAApB,GACP,MAAiB,SAAdA,EAAKsE,OACG,cAACxC,GAAD,CAAsB9B,KAAMA,IAEjB,QAAdA,EAAKsE,OACF,cAACL,GAAD,CAASjE,KAAMA,EAAMgD,QAAM,SADjC,KAIT,eAACO,EAAA,EAAD,CAAaC,MAAO,CAACa,WAAW,MAAhC,YACGtI,GAAQ,cAAC0H,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WAC7BQ,EAAQpI,EAAK,KADd,SAGE,MAEZA,EAxBI,GAwBM,EACTL,EAAaK,EAAKN,EAAMuI,QAAW,8BACjC,cAACP,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WAC1BQ,EAAQpI,EAAK,KADjB,SAGK,c,wBC5BN,SAASwI,GAAT,GAA4B,IAAPvE,EAAM,EAANA,KAC1B/E,EAAWC,cACjB,EAAgC6G,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KACA,GADA,KAC8BL,mBAAS,IAAvC,mBAAQzC,EAAR,KAAgB+C,EAAhB,KACM5E,EAAkBtC,YAAYoF,IACpC,EAAgCwB,mBAAS/B,EAAKsC,aAAetC,EAAKuC,aAAevC,EAAKwC,aAAtF,mBAAOC,EAAP,KAAiBC,EAAjB,KAwCA,OAtCAC,qBAAU,WACN1H,EAAS0D,EAAiB,CAACnC,GAAGwD,EAAKxD,GAAIT,KAAKmG,EAAalG,KAAKoG,EAAa7F,aAAQG,OACpF,IACHiG,qBAAU,WAEN,IAAIC,EADJT,EAAe,GAEJ,GAAR7C,IACDoD,EAAY1C,EAAKsC,aAAetC,EAAKuC,aAAevC,EAAKwC,aACzDI,OAAKlG,GAEI,GAAR4C,IACDoD,EAAY1C,EAAKuC,cAChBK,GAAK,GAEG,GAARtD,IACDoD,EAAY1C,EAAKsC,cACjBM,GAAK,GACP3H,EAAS0D,EAAiB,CAACnC,GAAGwD,EAAKxD,GAAIT,KAAK,EAAGC,KAAKoG,EAAa7F,QAAQqG,OAE1E,CAACtD,IACJqD,qBAAU,WAGF,IAAIC,GAFRhE,QAAQC,IAAImD,GACTA,KAEY,GAAR1C,IACDoD,EAAY1C,EAAKsC,aAAetC,EAAKuC,aAAevC,EAAKwC,aACzDI,OAAKlG,GAEI,GAAR4C,IACDoD,EAAY1C,EAAKuC,cAChBK,GAAK,GAEG,GAARtD,IACDoD,EAAY1C,EAAKsC,cACjBM,GAAK,GACP3H,EAAS0D,EAAiB,CAACnC,GAAGwD,EAAKxD,GAAIT,KAAKmG,EAAalG,KAAKoG,EAAa7F,QAAQqG,QAEzF,CAACV,IAEC,eAACW,EAAA,EAAD,CAAMtB,GAAI,CAAEuB,SAAU,IAAKC,YAAY,sBAAvC,UACF,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAY3B,GAAI,CAAEtH,SAAU,IAAMI,MAAM,iBAAiB8I,cAAY,EAArE,2HAGA,eAACD,EAAA,EAAD,CAAYE,QAAQ,KAAKvC,UAAU,MAAnC,iFACgBb,EAAKqD,QAErB,eAACH,EAAA,EAAD,CAAY3B,GAAI,CAAE+B,GAAI,KAAOjJ,MAAM,iBAAnC,yDACY2F,EAAKsC,aADjB,0CACwCtC,EAAKuC,aAD7C,oHACmFvC,EAAKwC,eAExF,eAACU,EAAA,EAAD,CAAYE,QAAQ,KAAK/I,MAAM,iBAA/B,mEAEE,6BAGJ,eAACkJ,EAAA,EAAD,CAAaC,MAAO,CAAC5I,QAAQ,SAA7B,WACIoH,GAAY,cAACyB,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WACxC1I,EAAS0D,EAAiB,CAACnC,GAAGwD,EAAKxD,GAAIT,KAAKmG,EAAalG,KAAKoG,KAC9DH,GAAY,IAFF,2HAIbD,GAAY,cAACyB,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WACvC1B,GAAY,GACZI,EAAU,IAFD,+GAIZL,GAAY,sBAAKwB,MAAO,CAACR,OAAO,MAApB,UACT,8FACA,eAACY,EAAA,EAAD,CAAQC,QAAQ,QAAQrH,GAAG,SAASpB,MAAOkE,EAAQjE,SAAU,SAACkE,GAC1D8C,EAAU9C,EAAEuE,OAAO1I,QADvB,UAIA,cAAC2I,EAAA,EAAD,CAAU3I,MAAM,IAAhB,gCACA,cAAC2I,EAAA,EAAD,CAAU3I,MAAM,IAAhB,yGACA,cAAC2I,EAAA,EAAD,CAAU3I,MAAM,IAAhB,6FAGH4G,GAAY,cAACrB,GAAD,CAAalD,gBAAiBA,IAC1CuE,GAAY,eAACuB,EAAA,EAAD,aACNrB,GAAe,cAACuB,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WACpCxB,EAAeD,EAAY,KADrB,SAGL,MAEZA,EAAYE,EAAY,EACvBK,EAAWP,EAAYzE,EAAgBuG,QAAW,8BAChD,cAACP,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WAC1BxB,EAAeD,EAAY,KAD/B,SAGK,WAKZF,GAAY,cAACyB,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAS,WACvC1B,GAAY,GACZI,EAAU,IAFD,qHC3GN,SAASmC,KACpB,MAAwBzC,mBAAS,MAAjC,mBAAO0C,EAAP,KAAaC,EAAb,KACMhH,EAAcvC,YAAYqF,IAC1B3C,EAAc1C,YAAYsF,IAC1B3C,EAAgB3C,YAAYuF,IAClC,EAA8BqB,oBAAU,KAAxC,mBAAO7F,EAAP,KAAgBD,EAAhB,KACMhB,EAAWC,cAoBjB,OAhBAyH,qBAAU,WACN1H,EAASyD,OACV,IACHiE,qBAAU,WACNyB,YAAW,WACPnJ,EAAS6D,GAA0B,CAAC7C,aAAYC,eAClD,OACH,CAACA,IAUA,sBAAKsH,MAAOmB,GAAZ,UACI,oBAAInB,MAAO,CAACa,WAAW,OAAvB,6FACA,uBAAOO,SAAS,QAAQC,KAAM,OAAQxJ,SAtB9C,SAA2BkE,GACvBmF,EAAQnF,EAAEuE,OAAOgB,MAAM,KAqB+CtI,GAAG,aAAagH,MAAO,CAAC5I,QAAQ,UAClG,eAACmK,GAAA,EAAD,CAAKvB,MAAO,CAACwB,aAAa,MAA1B,WACMnH,GAAe,cAAC4F,EAAA,EAAD,CAAQL,QAAQ,YAAYO,QAAS,WAClDsB,SAASC,cAAc,eAAeC,SADzB,oEAGhBtH,GAAe,gCAAK,cAACuH,GAAA,EAAD,IAAL,iHACbX,GAAQ,cAAChB,EAAA,EAAD,CAAQE,QAjB/B,WACI,IAAI0B,EAAW,IAAIC,SACnB1G,QAAQC,IAAI4F,GACTA,IACCY,EAASE,OAAO,OAAQd,GACxBxJ,EAASuD,EAAc,CAACH,KAAKgH,EAAU5G,SAASgG,EAAK7L,UAYXwK,QAAQ,OAAnC,yEAEZ1F,IAAgBI,GAAwC,SAAvBJ,EAAY4G,QAAqB,cAACC,GAAD,CAAYvE,KAAMtC,MACpFA,IAAgBI,GAAwC,QAAvBJ,EAAY4G,QAAoB,cAACL,GAAD,CAASjE,KAAMtC,IAClFI,GAAiB,cAACsH,GAAA,EAAD,OAK9B,I,GAAMT,GAAiB,CACnBnD,OAAQ,uBACRgE,QAAS,KACTC,cAAe,KACfzC,OAAO,M,iGC/CL0C,GAAOlM,YAAO,MAAPA,EACX,gBAAGI,EAAH,EAAGA,MAAH,2BAEyB,SAAvBA,EAAM+L,QAAQC,KAAkB,yBAA2B,kBAF7D,8BAcWC,IANCrM,YAAO,QAAPA,CAAH,4FAMiBA,YAAO,MAAPA,EAC1B,gBAAGI,EAAH,EAAGA,MAAH,uDAE2C,SAAvBA,EAAM+L,QAAQC,KAAkB,UAAY,UAFhE,kCAG2C,SAAvBhM,EAAM+L,QAAQC,KAAkB,UAAY,OAHhE,6HAUyC,SAAvBhM,EAAM+L,QAAQC,KAAkB,UAAY,UAV9D,sDAcyC,SAAvBhM,EAAM+L,QAAQC,KAAkB,UAAY,UAd9D,4GAmB6C,SAAvBhM,EAAM+L,QAAQC,KAAkB,UAAY,OAnBlE,yBAqB2B,SAAvBhM,EAAM+L,QAAQC,KAAkB,yBAA2B,kBArB/D,gMAsDF,IAAME,GAAYtM,aAlBlB,SAAaC,GACX,IAAQ8B,EAAkC9B,EAAlC8B,MAAiBwK,GAAiBtM,EAA3BuM,SAA2BvM,EAAjBsM,IAAOE,EAAhC,aAA0CxM,EAA1C,IACMwB,EAAWC,cACjB,OACE,gDAAS+K,GAAT,cACE,+BAAO1K,IACP,cAAC,KAAD,CAAWoI,QAAS,WAClB1I,EAASoE,GAA6B0G,aAW5BvM,EAChB,gBAAGI,EAAH,EAAGA,MAAH,uIAOyB,SAAvBA,EAAM+L,QAAQC,KAAkB,yBAA2B,UAP7D,kCAS2C,SAAvBhM,EAAM+L,QAAQC,KAAkB,UAAY,UAThE,gKAiByC,SAAvBhM,EAAM+L,QAAQC,KAAkB,UAAY,UAjB9D,oCAkB6C,SAAvBhM,EAAM+L,QAAQC,KAAkB,UAAY,UAlBlE,kMAmCIM,GAAU1M,YAAO,KAAPA,EACd,gBAAGI,EAAH,EAAGA,MAAH,sIAM2C,SAAvBA,EAAM+L,QAAQC,KAAkB,UAAY,OANhE,6VA2B6C,SAAvBhM,EAAM+L,QAAQC,KAAkB,UAAY,UA3BlE,4IAoC6C,SAAvBhM,EAAM+L,QAAQC,KAAkB,UAAY,UApClE,uFA8Ca,SAASO,KACtB,IAAM7I,EAAiBnC,YAAY+E,IAC7B3C,EAAqBpC,YAAYiF,IACjCnF,EAAWC,cAIjB,OACE,eAACwK,GAAD,WACE,8BACE,eAACG,GAAD,WACGtI,EAAmB6D,KAAI,SAACgF,EAAQC,GAAT,OACtB,cAACP,GAAD,CAAWvK,MAAO2D,KAAKoH,MAAMF,GAAQxN,KAAMmN,GAAIK,OAGjD,uBAAO5J,GAAG,gBAAgB+J,WAAW,QAAQC,YAAY,yDAAYnL,SAAU,SAACkE,GAC3EA,EAAEuE,OAAO1I,MAAM4I,OAAQ/I,EAASgD,EAAmBsB,EAAEuE,OAAO1I,QAC1DH,EAASuE,cAInBlC,EAAe0G,OAAS,EACvB,cAACkC,GAAD,UACG5I,EAAe8D,KAAI,SAACgF,EAAQC,GAAT,OAClB,qBAAI1C,QAAS,SAACpE,GACZtE,EAASuE,MACTyF,SAASC,cAAc,kBAAkB9J,MAAQ,GArB3DH,EAAS+D,GAsBWoH,KAHZ,UAKE,+BAAOA,EAAOxN,OACd,cAAC,KAAD,CAAWqB,SAAS,kBAIxB,QC9LK,SAASwM,KACpB,MAAsC1E,mBAAS,wBAA/C,mBAAO2E,EAAP,KAAoBC,EAApB,KACMhJ,EAAQxC,YAAYkF,IACpB9C,EAAqBpC,YAAYiF,IACjC5C,EAAqBrC,YAAYmF,IACjCrF,EAAWC,cAwBjB,OAvBAyH,qBAAU,WAEFgE,EADO,OAARhJ,EACgB,uBAEXA,EACW,yBAGA,8BAErB,CAACA,IAcC,sBAAK6F,MAAK,2BAAMoD,IAAN,IAAyBpF,OAAQkF,IAA3C,UACI,oBAAIlD,MAAO,CAACa,WAAW,OAAvB,yGACA,eAACU,GAAA,EAAD,CACAlE,UAAU,OACVU,GAAI,CACJ,kBAAmB,CAAEsF,EAAG,EAAGjM,QAAS,iBAEpCkM,YAAU,EACVC,aAAa,MANb,UAOI,cAACC,GAAA,EAAD,CAAWxD,MAAO,CAACzI,MAAM,MAAOZ,YAAY,MAAO8M,WAAS,EAACzK,GAAG,cAAcjB,MAAM,wFAAkB6H,QAAQ,WAAWM,KAAK,UAC9H,cAACyC,GAAD,IACA,cAAC1C,EAAA,EAAD,CAAQE,QAxBpB,WACQ,IAAIjC,EAAcuD,SAASC,cAAc,gBAAgB9J,MACrD0E,EAAavC,EAAmB6D,KAAI,SAAAQ,GACpC,OAAO1C,KAAKoH,MAAM1E,GAAKsF,QAEvB7I,EAAOa,KAAKC,UAAU,CACtBvG,KAAO8I,EACPyF,MAAOrH,IAEX7E,EAAS0E,MACT1E,EAASmD,EAAkBC,KAcC+E,QAAQ,YAAY/I,MAAM,UAAlD,oEAGA,cAACoJ,EAAA,EAAD,CAAQL,QAAQ,WAAW/I,MAAM,QAAQsJ,QAAS,WAC9CsB,SAASC,cAAc,gBAAgB9J,MAAS,GAChDH,EAASyE,OAFb,kEAOK,IAAR/B,GAAgB,mBAAG6F,MAAO,CAACa,WAAW,MAAOhK,MAAM,OAAnC,mDACR,IAARsD,GAAgBH,GAAsB,oBAAGgG,MAAO,CAACa,WAAY,MAAvB,0JAAyD7G,EAAmB4D,KAAI,SAAAQ,GACnH,OAAOA,EAAIhJ,KAAK,YAEX,IAAR+E,GAAiB,mBAAG6F,MAAO,CAACa,WAAW,MAAOhK,MAAM,SAAnC,6JAK9B,IAAMuM,GAAoB,CAEtBpB,QAAS,KACTC,cAAe,KACfzC,OAAO,MClEI,SAASoE,KAEpB,OACI,gCACI,cAACX,GAAD,IACA,uBACA,uBACA,cAACjC,GAAD,OCYG6C,OAdf,WACE,IAAMvO,EAAOqC,YAAY9B,GAIzB,OAHAsJ,qBAAU,WACR/D,QAAQC,IAAI/F,KACX,CAACA,IAEF,gCACE,cAACkC,EAAD,IACQ,UAAPlC,GAAkB,cAAC,GAAD,IACX,YAAPA,GAAoB,cAACoL,GAAD,QCZdoD,GAAQC,YAAe,CAClCC,QAAS,CACPlO,WAAYmO,EACZtH,MAAOuH,GACPvK,QAASwK,KCGOC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUb,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJrC,SAASmD,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,kB","file":"static/js/main.d428c8dc.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n    page : \"check\"\n}\nexport const navigationSlice = createSlice({\n    name: \"navigation\",\n    initialState,\n    reducers:{\n        setPage: (state, action)=>{\n            state.page = action.payload;\n        }\n    }\n\n    \n})\n\nexport const { setPage } = navigationSlice.actions\n\nexport const selectPage = (state) => state.navigation.page\n\nexport default navigationSlice.reducer","import { styled } from '@mui/material/styles';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPage, setPage } from '../../redux/navigation/navigationSlice';\n\nconst StyledTab = styled((props) => <Tab disableRipple {...props} />)(\n    ({ theme }) => ({\n      textTransform: 'none',\n      fontWeight: theme.typography.fontWeightRegular,\n      fontSize: theme.typography.pxToRem(15),\n      marginRight: theme.spacing(1),\n      color: 'rgba(0, 0, 0, 0.3)',\n      '&.Mui-selected': {\n        color: '#000000',\n      },\n      '&.Mui-focusVisible': {\n        backgroundColor: 'rgba(255, 255, 255, 0.32)',\n      },\n    }),\n  );\n\n  const StyledTabs = styled((props) => (\n    <Tabs\n      {...props}\n      TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }}\n    />\n  ))({\n    '& .MuiTabs-indicator': {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: 'transparent',\n    },\n    '& .MuiTabs-indicatorSpan': {\n      maxWidth: 40,\n      width: '100%',\n      backgroundColor: '#fff',\n    },\n  });\n\nexport default function Navigation(){\n      const dispatch = useDispatch();\n      const page = useSelector(selectPage)\n      function changePage(event,page){\n          dispatch(setPage(page))\n      }\n      return(      \n        <StyledTabs\n        value={page}\n        onChange={changePage}\n        aria-label=\"styled tabs example\">\n            <StyledTab value=\"check\" label=\"–ü—Ä–æ–≤–µ—Ä–∏—Ç—å\" />\n            <StyledTab value=\"history\" label=\"–ò—Å—Ç–æ—Ä–∏—è\" />\n        </StyledTabs>\n      )\n\n}","// export const API_URL = \"http://192.168.133.111\"\nexport const API_URL = \"\"","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { API_URL } from \"../../consts\";\n\nconst initialState = {\n    tasks : [],\n    tasksCount : 0,\n    tasksSubTasks: {}\n}\n\nexport const getTasksThunk = createAsyncThunk(\n    \"history/getTasksThunk\",\n    async({skip,take, setCounter, counter})=>{\n        const result = await fetch(`${API_URL}/api/tasks?skip=${skip}&take=${take}`)\n        setCounter(--counter);\n        return await result.json();\n    }\n)\nexport const getTasksSubTasksThunk = createAsyncThunk(\n    \"history/getTasksSubTasksThunk\",\n    async({skip,take, isValid, id})=>{\n        let isValidStr = isValid ? \"&isValid=true\" : \"&isValid=false\";\n        if(isValid===undefined) isValidStr = \"\";\n        const result = await fetch(`${API_URL}/api/tasks/${id}?skip=${skip}&take=${take}${isValidStr}`)\n        let json = await result.json();\n        json.id = id;\n        return json;\n    }\n)\nexport const  historySlice = createSlice({\n    name: \"history\",\n    initialState,\n    ...initialState,\n    reducers:{},\n    extraReducers:(builder)=>{\n        builder.addCase(getTasksThunk.fulfilled,(state, action)=>{\n            state.tasks = action.payload.tasks;\n            state.tasksCount = action.payload.count\n        });\n        builder.addCase(getTasksSubTasksThunk.fulfilled, (state, action)=>{\n            state.tasksSubTasks[action.payload.id] = action.payload.subTasks\n        });\n    }\n\n})\n\nexport const selectTasks = (state) => state.history.tasks\nexport const selectTasksSubTasks = (state) => state.history.tasksSubTasks\nexport const selectTasksCount = (state) => state.history.tasksCount\n\nexport default historySlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport { API_URL } from \"../../consts\"\nconst initialState = {\n    categoriesList:[],\n    selectedCategories: [],\n    responseCategories: [],\n    currentSubTasks: [],\n    currentTask: [],\n    error:null,\n    selectedTaskId: null,\n    isUploading:false,\n    isGettingTask: true,\n    isGettingSubTasks: false,\n    isModalResult:false\n}\nexport const getCategoriesThunk = createAsyncThunk(\n    \"check/getCategoriesThunk\",\n    async(input)=>{\n        let response = await fetch(API_URL+\"/api/category_search?like=\"+input);\n        return await response.json();\n    }\n)\n\nexport const expressCheckThunk = createAsyncThunk(\n    \"check/expressCheckThunk\",\n    async(body)=>{\n        let response = await fetch(API_URL+\"/api/express\",{\n            method: \"POST\",\n            headers:{\n                \"Content-Type\": \"application/json\"\n            },\n            body\n        })\n        return await response.json();\n    }\n)\n\nexport const sendFileThunk = createAsyncThunk(\n    \"check/sendFileThunk\",\n    async ({body, fileName})=>{\n        let response = await fetch(API_URL+\"/api/tasks\",{\n            method:\"POST\",\n            body\n        })\n        return await response.json();\n    }\n)\n\nexport const getLastTaskThunk = createAsyncThunk(\n    \"check/getLastTaskThunk\",\n    async()=>{\n        let response = await fetch(API_URL+\"/api/tasks/0\");\n        return await response.json();\n    }\n\n)\nexport const getSubTasksThunk = createAsyncThunk(\n    \"check/getSubTasksThunk\",\n    async({skip, take, id, isValid})=>{\n        let isValidStr = isValid ? \"&isValid=true\" : \"&isValid=false\";\n        if(isValid===undefined) isValidStr = \"\";\n        console.log(isValid)\n        let response = await fetch(API_URL+`/api/tasks/${id}?skip=${skip}&take=${take}${isValidStr}`);\n        return await response.json();\n    }\n\n)\nexport const getLastTaskThunkForUpload = createAsyncThunk(\n    \"check/getLastTaskThunkForUpload\",\n    async({setCounter, counter})=>{\n        let response = await fetch(API_URL+\"/api/tasks/0\");\n        setCounter(--counter)\n        return await response.json();\n    }\n\n)\nexport const checkSlice = createSlice({\n    name: \"check\",\n    initialState,\n    ...initialState,\n    reducers:{\n        setSelectedCategories: (state, action)=>{\n            if(!state.selectedCategories.includes(JSON.stringify(action.payload))) state.selectedCategories.push(JSON.stringify(action.payload))\n        },\n        removeFromSelectedCategories: (state, action) =>{\n            state.selectedCategories = state.selectedCategories.filter((e) => e !== action.payload)\n        },\n        clearCategories: (state)=>{\n            state.categoriesList = [];\n        },\n        setError: (state, action)=>{\n            state.error = action.payload\n        },\n        clearExpressCheckStates: (state)=>{\n            state.categoriesList = [];\n            state.selectedCategories = [];\n            state.error = null;\n        },\n        precheckCleaning:(state)=>{\n            state.responseCategories = [];\n            state.error = null;\n        },\n        setIsModalResult: (state, action)=>{\n            state.isModalResult = action.payload;\n        },\n        setCurrentTask: (state, action)=>{\n            state.currentTask = action.payload\n        }\n    },\n    extraReducers: (builder)=>{\n        builder.addCase(getCategoriesThunk.fulfilled, (state, action) => {\n            // Add user to the state array\n            state.categoriesList = action.payload.categories\n        });\n        builder.addCase(expressCheckThunk.fulfilled,(state, action)=>{\n            if(action.payload.isValid===null) state.error = null\n            else state.error = !action.payload.isValid\n            state.responseCategories = action.payload.—Åategories\n            console.log(action.payload.—Åategories)\n        });\n        builder.addCase(getLastTaskThunk.fulfilled, (state, action)=>{\n            state.currentTask = action.payload.task;\n            state.isGettingTask = false;\n        });\n        builder.addCase(getSubTasksThunk.fulfilled, (state, action)=>{\n            state.currentSubTasks = action.payload.subTasks ;\n            state.isGettingSubTasks = false;\n        });\n        builder.addCase(getSubTasksThunk.pending, (state, action)=>{\n            state.isGettingSubTasks = true;\n        });\n        builder.addCase(getLastTaskThunkForUpload.fulfilled, (state, action)=>{\n            state.currentTask = action.payload.task;\n            state.isGettingTask = false;\n        });\n        builder.addCase(getLastTaskThunk.pending, (state, action)=>{\n            state.isGettingTask = true;\n        });\n        builder.addCase(sendFileThunk.fulfilled, (state,action)=>{\n            console.log(action.payload.task);\n            state.currentTask = action.payload.task;\n            state.isUploading = false\n        })\n        builder.addCase(sendFileThunk.pending, (state,action)=>{\n            state.isUploading = true;\n        })\n    }\n\n})\n\nexport const {setSelectedCategories, removeFromSelectedCategories, clearCategories, clearExpressCheckStates,\n                precheckCleaning, setIsModalResult, setCurrentTask} = checkSlice.actions\n\nexport const selectCategoriesList = (state) => state.check.categoriesList\nexport const selectSelectedCategories = (state) => state.check.selectedCategories\nexport const selectError = (state) => state.check.error\nexport const selectResponseCategories = (state) => state.check.responseCategories\nexport const selectCurrentSubTasks = (state) => state.check.currentSubTasks\nexport const selectCurrentTask = (state) => state.check.currentTask\nexport const selectSelectedTaskId = (state) => state.check.selectedTaskId\nexport const selectIsUploading = (state)=> state.check.isUploading\nexport const selectIsGettingTask = (state)=>state.check.isGettingTask\nexport const selectIsGettingSubTasks = (state) => state.check.isGettingSubTasks;\nexport const selectIsModalResult = (state) => state.check.isModalResult\n\nexport default checkSlice.reducer","import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentSubTasks, selectIsGettingSubTasks } from '../../redux/check/checkSlice';\nexport default function ResultTable({currentSubTasks}){\n    return(\n    <TableContainer component={Paper} >\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell width=\"33%\">–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</TableCell>\n            <TableCell width=\"33%\">–£–∫–∞–∑–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</TableCell>\n            <TableCell width=\"33%\">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {currentSubTasks.map((row) => {\n              let bgcolor = !row.isValid ? \"rgb(255,0,0,0.1)\" : \"rgb(127,255,0,0.2)\";\n              if(row.isValid===null) bgcolor = \"rgb(255,255,255,1)\";\n            return <TableRow\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 }, backgroundColor:bgcolor }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.productName}\n              </TableCell>\n              <TableCell>{row.userCategories.map(cat=>{\n                  return cat.name+\"; \"\n              })}</TableCell>\n              <TableCell>{row.defaultCategories.map(cat=>{\n                  return cat.name+\"; \"\n              })}\n              </TableCell>\n            </TableRow>\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    )\n}","import Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport ResultTable from '../../check/ResultTable';\nimport { getTasksSubTasksThunk, selectTasksSubTasks } from '../../../redux/check/historySlice';\n\nexport default function SuccesCardForHistory({task}){\n    const dispatch = useDispatch()\n    const [viewMode, setViewMode] = useState(false)\n    const [currentSkip, setCurrentSkip] = useState(0)\n    const [currentTake] = useState(10)\n    const currentSubTasks = useSelector(selectTasksSubTasks)\n    const [ filter, setFilter ] = useState(0);\n    const [condSkip, setCondSkip] = useState(task.isValidCount + task.inValidCount + task.notDetected)\n    useEffect(()=>{\n        console.log(currentSubTasks)\n    },[currentSubTasks])\n    useEffect(()=>{\n      let flag;\n      if(filter==0){ \n        setCondSkip(task.isValidCount + task.inValidCount + task.notDetected)\n        flag=undefined;\n      }\n      if(filter==1){\n        setCondSkip(task.inValidCount)\n         flag=false;\n      }\n      if(filter==2){ \n        setCondSkip(task.isValidCount)\n        flag=true;}\n      dispatch(getTasksSubTasksThunk({skip:currentSkip, take:currentTake, id:task.id, isValid:flag}))\n    }, [currentSkip])\n\n    useEffect(()=>{        \n      setCurrentSkip(0);\n      let flag;\n      if(filter==0){ \n        setCondSkip(task.isValidCount + task.inValidCount + task.notDetected)\n        flag=undefined;\n      }\n      if(filter==1){\n        setCondSkip(task.inValidCount)\n         flag=false;\n      }\n      if(filter==2){ \n        setCondSkip(task.isValidCount)\n        flag=true;}\n        console.log(flag)        \n      dispatch(getTasksSubTasksThunk({id:task.id, skip:0, take:currentTake, isValid:flag}))\n  }, [filter])\n    return(\n        <Card sx={{ minWidth: 275, borderColor:\"rgb(127,255,0,0.5)\" , margin:'2%'}}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç {task.time}\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          –£—Å–ø–µ—à–Ω–æ: {task.isValidCount} –û—à–∏–±–∫–∞: {task.inValidCount} –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞: { task.notDetected }\n        </Typography>\n        <Typography variant=\"h5\" color=\"rgb(127,255,0)\">\n          –ó–∞–≤–µ—Ä—à–µ–Ω–æ\n          <br />\n        </Typography>\n      </CardContent>\n      <CardActions style={{display:\"block\"}}>\n        {!viewMode && <Button size=\"small\" onClick={()=>{\n            dispatch(getTasksSubTasksThunk({id:task.id, skip:currentSkip, take:currentTake, isValid:undefined}))\n            setViewMode(true)\n        }}>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å–∞—Ç</Button>}\n        {viewMode && <Button size=\"small\" onClick={()=>{\n            setViewMode(false)\n        }}>–°–∫—Ä—ã—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</Button>}\n                {viewMode && <div style={{margin:\"1%\"}}> \n            <p>–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è:</p>\n            <Select labelId=\"label\" id=\"select\" value={filter} onChange={(e)=>{\n                setFilter(e.target.value)\n            }}>\n            <MenuItem value=\"0\">–í—Å–µ</MenuItem>\n            <MenuItem value=\"1\">–¢–æ–ª—å–∫–æ –æ—à–∏–±–æ—á–Ω—ã–µ</MenuItem>\n            <MenuItem value=\"2\">–¢–æ–ª—å–∫–æ –≤–µ—Ä–Ω—ã–µ</MenuItem>\n          </Select>\n          </div>}\n\n        {viewMode && <ResultTable currentSubTasks={ currentSubTasks[task.id] ? currentSubTasks[task.id]  : []}/>}\n        {viewMode && <CardActions >\n            {!!currentSkip && <Button size=\"small\" onClick={()=>{\n                        setCurrentSkip(currentSkip-10)\n                    }}>\n                        {\"<\"}\n            </Button>}\n            {currentSkip/currentTake+1}\n            {!!currentSubTasks[task.id]&&((condSkip)>(currentSkip+currentSubTasks[task.id].length)) && <div>\n                <Button size=\"small\" onClick={()=>{\n                    setCurrentSkip(currentSkip+10)\n                }}>\n                    {\">\"}\n                </Button>\n            </div>}\n\n        </CardActions>}\n        {viewMode && <Button size=\"small\" onClick={()=>{\n            setViewMode(false)\n        }}>–°–∫—Ä—ã—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</Button>}\n      </CardActions>\n    </Card>\n  );\n}","import Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\n\nexport default function RunCard({task, margin}){\n    return(\n        <Card sx={{ minWidth: 275, borderColor:\"rgb(0,0,255,0.5)\", margin:margin ? \"2%\" : \"0\" }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          –ü–æ—Å–ª–µ–¥–Ω—è—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç {task.time}\n        </Typography>\n\n        <Typography variant=\"h5\" color=\"rgb(0,0,255)\">\n          –í –æ–±—Ä–∞–±–æ—Ç–∫–µ\n          <br />\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}","import { useDispatch, useSelector } from \"react-redux\";\nimport { getTasksThunk, selectTasks, selectTasksCount } from \"../../redux/check/historySlice\";\nimport { useEffect, useState } from \"react\";\nimport SuccesCardForHistory from \"./cards/SuccessCardForHistory\";\nimport RunCard from \"../check/cards/RunCard\";\nimport { CardActions, Button } from \"@mui/material\";\n\nexport default function History(){\n    const tasks = useSelector(selectTasks);\n    const [skip, setSkip] = useState(0)\n    const [counter, setCounter] = useState(-1000000)\n    const tasksCount = useSelector(selectTasksCount)\n    const take = 10;\n    const dispatch = useDispatch();\n    useEffect(()=>{\n        setTimeout(()=>{\n            dispatch(getTasksThunk({skip,take, setCounter:setCounter, counter}))\n        },1000) \n    }, [counter, skip])\n    return(\n        <div>\n            <h2  style={{marginLeft:\"2%\"}}>–ò—Å—Ç–æ—Ä–∏—è –æ–±—Ä–∞–±–æ—Ç–æ–∫</h2>\n            {tasks.map(task=>{\n                if(task.status===\"done\"){\n                    return <SuccesCardForHistory task={task}/>\n                }\n                else if(task.status===\"run\"){\n                    return <RunCard task={task} margin/>\n                }\n            })}\n            <CardActions style={{marginLeft:\"2%\"}}>\n            {!!skip && <Button size=\"small\" onClick={()=>{\n                        setSkip(skip-10)\n                    }}>\n                        {\"<\"}\n            </Button>}\n            {skip/take+1}\n            {(tasksCount)>(skip+tasks.length) && <div>\n                <Button size=\"small\" onClick={()=>{\n                    setSkip(skip+10)\n                }}>\n                    {\">\"}\n                </Button>\n            </div>}\n\n        </CardActions>\n        </div>\n    )\n}","import Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSubTasksThunk, selectCurrentSubTasks, setCurrentTask, setIsModalResult } from '../../../redux/check/checkSlice';\nimport { useEffect, useState } from 'react';\nimport ResultTable from '../ResultTable';\nimport { flushSync } from 'react-dom';\n\nexport default function SuccesCard({task}){\n    const dispatch = useDispatch()\n    const [viewMode, setViewMode] = useState(false)\n    const [currentSkip, setCurrentSkip] = useState(0)\n    const [currentTake, setCurrentTake] = useState(10)\n    const [ filter, setFilter ] = useState(0);\n    const currentSubTasks = useSelector(selectCurrentSubTasks)\n    const [condSkip, setCondSkip] = useState(task.isValidCount + task.inValidCount + task.notDetected)\n\n    useEffect(()=>{\n        dispatch(getSubTasksThunk({id:task.id, skip:currentSkip, take:currentTake, isValid:undefined}))\n    }, [])\n    useEffect(()=>{                \n        setCurrentSkip(0);\n        let flag;\n        if(filter==0){ \n          setCondSkip(task.isValidCount + task.inValidCount + task.notDetected)\n          flag=undefined;\n        }\n        if(filter==1){\n          setCondSkip(task.inValidCount)\n           flag=false;\n        }\n        if(filter==2){ \n          setCondSkip(task.isValidCount)\n          flag=true;}\n        dispatch(getSubTasksThunk({id:task.id, skip:0, take:currentTake, isValid:flag}))\n\n    }, [filter])\n    useEffect(()=>{\n        console.log(viewMode)\n        if(viewMode){\n            let flag;\n            if(filter==0){ \n              setCondSkip(task.isValidCount + task.inValidCount + task.notDetected)\n              flag=undefined;\n            }\n            if(filter==1){\n              setCondSkip(task.inValidCount)\n               flag=false;\n            }\n            if(filter==2){ \n              setCondSkip(task.isValidCount)\n              flag=true;}\n            dispatch(getSubTasksThunk({id:task.id, skip:currentSkip, take:currentTake, isValid:flag}))\n        }\n    },[currentSkip])\n    return(\n        <Card sx={{ minWidth: 275, borderColor:\"rgb(127,255,0,0.5)\" }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          –ü–æ—Å–ª–µ–¥–Ω—è—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç {task.time}\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          –£—Å–ø–µ—à–Ω–æ: {task.isValidCount} –û—à–∏–±–∫–∞: {task.inValidCount} –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞: { task.notDetected }\n        </Typography>\n        <Typography variant=\"h5\" color=\"rgb(127,255,0)\">\n          –ó–∞–≤–µ—Ä—à–µ–Ω–æ\n          <br />\n        </Typography>\n      </CardContent>\n      <CardActions style={{display:\"block\"}}>\n        {!viewMode && <Button size=\"small\" onClick={()=>{\n            dispatch(getSubTasksThunk({id:task.id, skip:currentSkip, take:currentTake}))\n            setViewMode(true)\n        }}>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å–∞—Ç</Button>}\n        {viewMode && <Button size=\"small\" onClick={()=>{\n            setViewMode(false)\n            setFilter(0);\n        }}>–°–∫—Ä—ã—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</Button>}\n        {viewMode && <div style={{margin:\"1%\"}}> \n            <p>–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è:</p>\n            <Select labelId=\"label\" id=\"select\" value={filter} onChange={(e)=>{\n                setFilter(e.target.value)\n\n            }}>\n            <MenuItem value=\"0\">–í—Å–µ</MenuItem>\n            <MenuItem value=\"1\">–¢–æ–ª—å–∫–æ –æ—à–∏–±–æ—á–Ω—ã–µ</MenuItem>\n            <MenuItem value=\"2\">–¢–æ–ª—å–∫–æ –≤–µ—Ä–Ω—ã–µ</MenuItem>\n          </Select>\n          </div>}\n        {viewMode && <ResultTable currentSubTasks={currentSubTasks}/>}\n        {viewMode && <CardActions >\n            {!!currentSkip && <Button size=\"small\" onClick={()=>{\n                        setCurrentSkip(currentSkip-10)\n                    }}>\n                        {\"<\"}\n            </Button>}\n            {currentSkip/currentTake+1}\n            {(condSkip)>(currentSkip+currentSubTasks.length) && <div>\n                <Button size=\"small\" onClick={()=>{\n                    setCurrentSkip(currentSkip+10)\n                }}>\n                    {\">\"}\n                </Button>\n            </div>}\n\n        </CardActions>}\n        {viewMode && <Button size=\"small\" onClick={()=>{\n            setViewMode(false)\n            setFilter(0);\n        }}>–°–∫—Ä—ã—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã</Button>}\n      </CardActions>\n    </Card>\n  );\n}","import { Button, Box, CircularProgress } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getLastTaskThunk, getLastTaskThunkForUpload, selectCurrentTask, selectIsGettingTask, selectIsUploading, sendFileThunk } from \"../../redux/check/checkSlice\";\nimport RunCard from \"./cards/RunCard\";\nimport SuccesCard from \"./cards/SuccessCard\";\nimport ResultTable from \"./ResultTable\";\nexport default function FileCheck(){\n    const [file, setFile] = useState(null)\n    const currentTask = useSelector(selectCurrentTask)\n    const isUploading = useSelector(selectIsUploading);\n    const isGettingTask = useSelector(selectIsGettingTask);\n    const [counter, setCounter] = useState(-100000)\n    const dispatch = useDispatch();\n    function fileInputHandler (e){\n        setFile(e.target.files[0])\n    }\n    useEffect(()=>{\n        dispatch(getLastTaskThunk());\n    }, [])\n    useEffect(()=>{\n        setTimeout(()=>{\n            dispatch(getLastTaskThunkForUpload({setCounter, counter}));\n        },1000)\n    }, [counter])\n    function sendFile(){\n        let formData = new FormData();\n        console.log(file)\n        if(file){\n            formData.append(\"file\", file);\n            dispatch(sendFileThunk({body:formData, fileName:file.name}));\n        }\n    }\n    return(\n        <div style={fileCheckStyle}>\n            <h1 style={{marginLeft:\"38%\"}}>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞</h1>\n            <input multiple=\"false\" type={\"file\"} onChange={fileInputHandler} id=\"fileUpload\" style={{display:\"none\"}}/>\n            <Box style={{marginBottom:\"1%\"}}>\n                {!isUploading && <Button variant=\"contained\" onClick={()=>{\n                    document.querySelector(\"#fileUpload\").click();\n                }}>–ó–∞–≥—Ä—É–∑–∏—Ç—å</Button>}\n                {isUploading && <div><CircularProgress /> –ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞</div>}\n                {!!file && <Button onClick={sendFile} variant=\"text\">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</Button>}\n            </Box>\n            {!!currentTask && !isGettingTask && currentTask.status === \"done\" && <SuccesCard task={currentTask}/>}\n            {!!currentTask && !isGettingTask && currentTask.status === \"run\" && <RunCard task={currentTask}/>}\n            {isGettingTask && <CircularProgress />}\n        </div>\n    )\n\n}\nconst fileCheckStyle = {\n    border: \"solid rgb(0,0,0,0.1)\",\n    padding: \"1%\",\n    paddingBottom: \"1%\",\n    margin:\"1%\"\n}","import PropTypes from 'prop-types';\nimport { useAutocomplete } from '@mui/core/AutocompleteUnstyled';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { styled } from '@mui/material/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearCategories, getCategoriesThunk, removeFromSelectedCategories, selectCategoriesList, selectSelectedCategories, setSelectedCategories } from '../../redux/check/checkSlice';\nimport { useEffect } from 'react';\nconst Root = styled('div')(\n  ({ theme }) => `\n  color: ${\n    theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.65)' : 'rgba(0,0,0,.85)'\n  };\n  font-size: 14px;\n`,\n);\n\nconst Label = styled('label')`\n  padding: 0 0 4px;\n  line-height: 1.5;\n  display: block;\n`;\n\nexport const InputWrapper = styled('div')(\n  ({ theme }) => `\n  width: 300px;\n  border: 1px solid ${theme.palette.mode === 'dark' ? '#434343' : '#d9d9d9'};\n  background-color: ${theme.palette.mode === 'dark' ? '#141414' : '#fff'};\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n\n  &:hover {\n    border-color: ${theme.palette.mode === 'dark' ? '#177ddc' : '#40a9ff'};\n  }\n\n  &.focused {\n    border-color: ${theme.palette.mode === 'dark' ? '#177ddc' : '#40a9ff'};\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    background-color: ${theme.palette.mode === 'dark' ? '#141414' : '#fff'};\n    color: ${\n      theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.65)' : 'rgba(0,0,0,.85)'\n    };\n    height:37px ;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n`,\n);\n\nfunction Tag(props) {\n  const { label, onDelete, el, ...other } = props;\n  const dispatch = useDispatch()\n  return (\n    <div {...other}>\n      <span>{label}</span>\n      <CloseIcon onClick={()=>{\n        dispatch(removeFromSelectedCategories(el))\n        }} />\n    </div>\n  );\n}\n\nTag.propTypes = {\n  label: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst StyledTag = styled(Tag)(\n  ({ theme }) => `\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 22px;\n  background-color: ${\n    theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.08)' : '#fafafa'\n  };\n  border: 1px solid ${theme.palette.mode === 'dark' ? '#303030' : '#e8e8e8'};\n  border-radius: 2px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n\n  &:focus {\n    border-color: ${theme.palette.mode === 'dark' ? '#177ddc' : '#40a9ff'};\n    background-color: ${theme.palette.mode === 'dark' ? '#003b57' : '#e6f7ff'};\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 12px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`,\n);\n\nconst Listbox = styled('ul')(\n  ({ theme }) => `\n  width: 300px;\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: ${theme.palette.mode === 'dark' ? '#141414' : '#fff'};\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: ${theme.palette.mode === 'dark' ? '#2b2b2b' : '#fafafa'};\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: ${theme.palette.mode === 'dark' ? '#003b57' : '#e6f7ff'};\n    cursor: pointer;\n\n    & svg {\n      color: currentColor;\n    }\n  }\n`,\n);\n\nexport default function AutocompleteCategories() {\n  const categoriesList = useSelector(selectCategoriesList);\n  const selectedCategories = useSelector(selectSelectedCategories)\n  const dispatch = useDispatch()\n  function selectCat(cat){\n    dispatch(setSelectedCategories(cat))\n  }\n  return (\n    <Root>\n      <div >\n        <InputWrapper >\n          {selectedCategories.map((option, index) => (\n            <StyledTag label={JSON.parse(option).name} el={option} />\n          ))}\n\n          <input id=\"categoryInput\" spellcheck=\"false\" placeholder=\"–ö–∞—Ç–µ–≥–æ—Ä–∏—è\" onChange={(e)=>{\n            if(e.target.value.length) dispatch(getCategoriesThunk(e.target.value))\n            else dispatch(clearCategories())\n          }}/>\n        </InputWrapper>\n      </div>\n      {categoriesList.length > 0 ? (\n        <Listbox>\n          {categoriesList.map((option, index) => (\n            <li onClick={(e)=>{\n              dispatch(clearCategories())\n              document.querySelector(\"#categoryInput\").value = \"\";\n              selectCat(option)\n              }}>\n              <span>{option.name}</span>\n              <CheckIcon fontSize=\"small\" />\n            </li>\n          ))}\n        </Listbox>\n      ) : null}\n    </Root>\n  );\n}\n\n","import { TextField, Box, Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { clearExpressCheckStates, expressCheckThunk, precheckCleaning, selectError, selectResponseCategories, selectSelectedCategories } from \"../../redux/check/checkSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AutocompleteCategories from \"./AutocompleteCategories\";\nexport default function ExpressCheck(){\n    const [borderStyle, setBorderStyle] = useState(\"solid rgb(0,0,0,0.1)\");\n    const error = useSelector(selectError);\n    const selectedCategories = useSelector(selectSelectedCategories);\n    const responseCategories = useSelector(selectResponseCategories)\n    const dispatch = useDispatch();\n    useEffect(()=>{\n        if(error===null){\n            setBorderStyle(\"solid rgb(0,0,0,0.1)\")\n        }\n        else if(error){\n            setBorderStyle(\"solid rgb(255,0,0,0.7)\")\n        }\n        else{\n            setBorderStyle(\"solid rgb(127,255,0,0.5)\")\n        }\n    },[error])\n    function check(){\n            let productName = document.querySelector(\"#productName\").value\n            let categories = selectedCategories.map(cat=>{\n                return JSON.parse(cat).code;\n            })\n            let body = JSON.stringify({\n                name:  productName,\n                codes: categories\n            })\n            dispatch(precheckCleaning());\n            dispatch(expressCheckThunk(body))\n    }\n    return (\n        <div style={{...expressCheckStyle, border: borderStyle}}>\n            <h1 style={{marginLeft:\"38%\"}}>–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞</h1>\n            <Box\n            component=\"form\"\n            sx={{\n            '& > :not(style)': { m: 2, display: \"inline-block\" },\n            }}\n            noValidate\n            autoComplete=\"off\">\n                <TextField style={{width:\"45%\", marginRight:\"1%\"}} fullWidth id=\"productName\" label=\"–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞\" variant=\"outlined\" size=\"small\"/>\n                <AutocompleteCategories/>\n                <Button onClick={check} variant=\"contained\" color=\"success\">\n                    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å\n                </Button>\n                <Button variant=\"outlined\" color=\"error\" onClick={()=>{\n                    document.querySelector(\"#productName\").value  = \"\";\n                    dispatch(clearExpressCheckStates())\n                }}>\n                    –û—á–∏—Å—Ç–∏—Ç—å\n                </Button>\n            </Box>    \n            {error===true && <p style={{marginLeft:\"45%\", color:\"red\"}}>–û—à–∏–±–∫–∞</p>}\n            {error===true && responseCategories && <p style={{marginLeft: \"1%\"}}>–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {responseCategories.map(cat=>{\n                return cat.name+\"; \"\n            })}</p>}\n            {error===false && <p style={{marginLeft:\"40%\", color:\"green\"}}>–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞</p>}\n        </div>\n    )\n}\n\nconst expressCheckStyle = {\n    // border: \"solid rgb(127,255,0,0.5)\",\n    padding: \"1%\",\n    paddingBottom: \"1%\",\n    margin:\"1%\"\n}","import FileCheck from \"./FileCheck\";\nimport ExpressCheck from \"./ExpressCheck\";\n\nexport default function Check(){\n\n    return(\n        <div>\n            <ExpressCheck/>\n            <br/>\n            <br/>\n            <FileCheck/>\n\n        </div>\n    )\n}\n\n\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Navigation from './components/navigation/Navigation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPage } from './redux/navigation/navigationSlice';\nimport History from './components/history/History';\nimport Check from './components/check/Check';\n\nfunction App() {\n  const page = useSelector(selectPage)\n  useEffect(()=>{\n    console.log(page)\n  }, [page])\n  return (\n    <div>\n      <Navigation/>\n      {page===\"check\" && <Check/>}\n      {page===\"history\" && <History/>}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport navigationReducer from '../redux/navigation/navigationSlice'\nimport checkReducer from '../redux/check/checkSlice'\nimport historyReducer from '../redux/check/historySlice'\n\nexport const store = configureStore({\n  reducer: {\n    navigation: navigationReducer,\n    check: checkReducer,\n    history: historyReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}